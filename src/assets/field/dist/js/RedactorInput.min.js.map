{"version":3,"sources":["RedactorInput.js"],"names":["window","livePreviewHideFullscreen","$","Craft","RedactorInput","Garnish","Base","extend","id","linkOptions","volumes","elementSiteId","allSites","redactorConfig","showAllUploaders","$textarea","redactor","linkOptionModals","enforceButtonOrder","init","settings","this","transforms","defaultTransform","lang","redactorLang","direction","orientation","imageUpload","fileUpload","plugins","push","buttons","index","inArray","splice","lowestListButtonIndex","oldListButtons","i","length","buttonsAddFirst","concat","buttonsAdd","buttonsAddBefore","before","buttonsAddAfter","after","callbacks","started","handleRedactorInit","focus","onEditorFocus","bind","blur","onEditorBlur","contextbar","showContextBar","initRedactor","Slideout","on","addClass","removeClass","selector","toolbarFixed","target","closest","toolbarFixedTarget","currentInstance","$R","toolbarButtons","toolbar","getButtonsKeys","indexOf","plugin","craftAssetImages","overrideButton","addButton","setTransforms","setDefaultTransform","setVolumes","setElementSiteId","allowAllUploaders","craftAssetFiles","craftElementLinks","setAllSites","setLinkOptions","livePreview","ev","trigger","inputField","desiredOrder","$toolbar","getElement","nodes","buttonName","reverse","$existing","find","prepend","onInitRedactor","container","leaveFullscreenOnSaveShortcut","opts","scrollPageOnReady","$doc","ready","fullscreen","close","cp","proxy","isOpen","replaceRedactorButton","key","title","previousButton","getButton","icon","$icon","get","placeholderKey","placeholder","addButtonAfter","remove","button","setIcon","e","justResized","current","selection","getCurrent","data","inspector","parse","repositionContextBar","parent","$contextbar","top","clientY","height","offset","scrollTop","$win","position","left","clientX","width","css","isFigcaption","isComponentType","node","getComponent","$img","matches","attr","match","assetId","postActionRequest","success","image-editor","api","args","edit","set","jQuery"],"mappings":"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","file":"RedactorInput.min.js","sourcesContent":["window.livePreviewHideFullscreen = false;\n\n(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  /**\n   * Redactor input class\n   */\n  Craft.RedactorInput = Garnish.Base.extend(\n    {\n      id: null,\n      linkOptions: null,\n      volumes: null,\n      elementSiteId: null,\n      allSites: {},\n      redactorConfig: null,\n      showAllUploaders: false,\n\n      $textarea: null,\n      redactor: null,\n      linkOptionModals: null,\n\n      enforceButtonOrder: null,\n\n      init: function (settings) {\n        this.id = settings.id;\n        this.linkOptions = settings.linkOptions;\n        this.volumes = settings.volumes;\n        this.transforms = settings.transforms;\n        this.elementSiteId = settings.elementSiteId;\n        this.allSites = settings.allSites;\n        this.redactorConfig = settings.redactorConfig;\n        this.showAllUploaders = settings.showAllUploaders;\n        this.defaultTransform = settings.defaultTransform;\n\n        this.linkOptionModals = [];\n\n        if (this.redactorConfig.enforceButtonOrder) {\n          this.enforceButtonOrder = this.redactorConfig.enforceButtonOrder;\n          delete this.redactorConfig.enforceButtonOrder;\n        }\n\n        if (!this.redactorConfig.lang) {\n          this.redactorConfig.lang = settings.redactorLang;\n        }\n\n        if (!this.redactorConfig.direction) {\n          this.redactorConfig.direction =\n            settings.direction || Craft.orientation;\n        }\n\n        this.redactorConfig.imageUpload = false;\n        this.redactorConfig.fileUpload = false;\n\n        // Prevent a JS error when calling core.destroy() when opts.plugins == false\n        if (typeof this.redactorConfig.plugins !== typeof []) {\n          this.redactorConfig.plugins = [];\n        }\n\n        this.redactorConfig.plugins.push('craftAssetImages');\n        this.redactorConfig.plugins.push('craftAssetFiles');\n        this.redactorConfig.plugins.push('craftElementLinks');\n        this.redactorConfig.plugins.push('craftAssetImageEditor');\n\n        // Redactor I/II config setting normalization\n        if (this.redactorConfig.buttons) {\n          var index;\n\n          // buttons.formatting => buttons.format\n          if (\n            (index = $.inArray('formatting', this.redactorConfig.buttons)) !==\n            -1\n          ) {\n            this.redactorConfig.buttons.splice(index, 1, 'format');\n          }\n\n          // buttons.unorderedlist/orderedlist/undent/indent => buttons.lists\n          var oldListButtons = [\n              'unorderedlist',\n              'orderedlist',\n              'undent',\n              'indent',\n            ],\n            lowestListButtonIndex;\n\n          for (var i = 0; i < oldListButtons.length; i++) {\n            if (\n              (index = $.inArray(\n                oldListButtons[i],\n                this.redactorConfig.buttons\n              )) !== -1\n            ) {\n              this.redactorConfig.buttons.splice(index, 1);\n\n              if (\n                typeof lowestListButtonIndex === 'undefined' ||\n                index < lowestListButtonIndex\n              ) {\n                lowestListButtonIndex = index;\n              }\n            }\n          }\n\n          if (typeof lowestListButtonIndex !== 'undefined') {\n            this.redactorConfig.buttons.splice(\n              lowestListButtonIndex,\n              0,\n              'lists'\n            );\n          }\n        } else {\n          this.redactorConfig.buttons = [\n            'html',\n            'format',\n            'bold',\n            'italic',\n            'deleted',\n            'lists',\n            'image',\n            'file',\n            'link',\n          ];\n        }\n\n        // Now mix in the buttons provided by other options, before we start our own shenanigans\n        // `buttonsAddFirst`\n        if (this.redactorConfig.buttonsAddFirst) {\n          this.redactorConfig.buttons =\n            this.redactorConfig.buttonsAddFirst.buttons.concat(\n              this.redactorConfig.buttons\n            );\n        }\n\n        // `buttonsAdd`\n        if (this.redactorConfig.buttonsAdd) {\n          this.redactorConfig.buttons = this.redactorConfig.buttons.concat(\n            this.redactorConfig.buttonsAdd.buttons\n          );\n        }\n\n        // `buttonsAddBefore`\n        if (this.redactorConfig.buttonsAddBefore) {\n          var index;\n          for (i = 0; i < this.redactorConfig.buttons.length; i++) {\n            if (\n              this.redactorConfig.buttons[i] ==\n              this.redactorConfig.buttonsAddBefore.before\n            ) {\n              this.redactorConfig.buttons.splice(\n                i,\n                0,\n                ...this.redactorConfig.buttonsAddBefore.buttons\n              );\n              break;\n            }\n          }\n        }\n\n        // `buttonsAddAfter`\n        if (this.redactorConfig.buttonsAddAfter) {\n          var index;\n          for (i = 0; i < this.redactorConfig.buttons.length; i++) {\n            if (\n              this.redactorConfig.buttons[i] ==\n              this.redactorConfig.buttonsAddAfter.after\n            ) {\n              this.redactorConfig.buttons.splice(\n                i + 1,\n                0,\n                ...this.redactorConfig.buttonsAddAfter.buttons\n              );\n              break;\n            }\n          }\n        }\n\n        delete this.redactorConfig.buttonsAddFirst;\n        delete this.redactorConfig.buttonsAddBefore;\n        delete this.redactorConfig.buttonsAddAfter;\n        delete this.redactorConfig.buttonsAdd;\n\n        // Define our callbacks\n        this.redactorConfig.callbacks = {\n          started: Craft.RedactorInput.handleRedactorInit,\n          focus: this.onEditorFocus.bind(this),\n          blur: this.onEditorBlur.bind(this),\n          contextbar: this.showContextBar.bind(this),\n        };\n\n        if (this.redactorConfig.buttons.length === 0) {\n          delete this.redactorConfig.buttons;\n        }\n\n        // Initialize Redactor\n        this.initRedactor();\n\n        if (typeof Craft.Slideout !== 'undefined') {\n          Garnish.on(Craft.Slideout, 'open', () =>\n            $('body').addClass('redactor-element-editor-open')\n          );\n          Garnish.on(Craft.Slideout, 'close', () =>\n            $('body').removeClass('redactor-element-editor-open')\n          );\n        }\n      },\n\n      initRedactor: function () {\n        var selector = '#' + this.id;\n        this.$textarea = $(selector);\n\n        if (\n          typeof this.redactorConfig.toolbarFixed === 'undefined' ||\n          this.redactorConfig.toolbarFixed\n        ) {\n          // Set the toolbarFixedTarget depending on the context\n          var target = this.$textarea.closest('#content');\n          if (target.length) {\n            this.redactorConfig.toolbarFixedTarget = target;\n          }\n        }\n\n        Craft.RedactorInput.currentInstance = this;\n        this.$textarea.redactor(this.redactorConfig);\n\n        this.redactor = $R(selector);\n\n        if (typeof this.redactorConfig.buttons === 'undefined') {\n          this.redactorConfig.buttons = [];\n        }\n\n        var toolbarButtons = this.redactor.toolbar.getButtonsKeys();\n\n        if (this.redactorConfig.buttons.indexOf('image') !== -1) {\n          if (toolbarButtons.indexOf('image') !== -1) {\n            this.redactor.plugin.craftAssetImages.overrideButton('image');\n          } else {\n            this.redactor.plugin.craftAssetImages.addButton(\n              'image',\n              this.redactorConfig.buttons.indexOf('image')\n            );\n          }\n\n          this.redactor.plugin.craftAssetImages.setTransforms(this.transforms);\n          this.redactor.plugin.craftAssetImages.setDefaultTransform(\n            this.defaultTransform\n          );\n          this.redactor.plugin.craftAssetImages.setVolumes(this.volumes);\n          this.redactor.plugin.craftAssetImages.setElementSiteId(\n            this.elementSiteId\n          );\n          this.redactor.plugin.craftAssetImages.allowAllUploaders =\n            this.showAllUploaders;\n        }\n\n        if (this.redactorConfig.buttons.indexOf('file') !== -1) {\n          if (toolbarButtons.indexOf('file') !== -1) {\n            this.redactor.plugin.craftAssetFiles.overrideButton('file');\n          } else {\n            this.redactor.plugin.craftAssetFiles.addButton(\n              'file',\n              this.redactorConfig.buttons.indexOf('file')\n            );\n          }\n          this.redactor.plugin.craftAssetFiles.setVolumes(this.volumes);\n          this.redactor.plugin.craftAssetFiles.setElementSiteId(\n            this.elementSiteId\n          );\n        }\n\n        if (toolbarButtons.indexOf('link') !== -1) {\n          this.redactor.plugin.craftElementLinks.setElementSiteId(\n            this.elementSiteId\n          );\n          this.redactor.plugin.craftElementLinks.setAllSites(this.allSites);\n          if (this.linkOptions.length) {\n            this.redactor.plugin.craftElementLinks.setLinkOptions(\n              this.linkOptions\n            );\n          }\n        }\n\n        if (\n          this.redactorConfig.plugins.indexOf('fullscreen') !== -1 &&\n          typeof Craft.livePreview != 'undefined' &&\n          window.livePreviewHideFullscreen === false\n        ) {\n          window.livePreviewHideFullscreen = true;\n          Craft.livePreview.on('beforeEnter', function (ev) {\n            $('a.re-button.re-fullscreen').addClass('hidden');\n          });\n          Craft.livePreview.on('beforeExit', function (ev) {\n            $('a.re-button.re-fullscreen').removeClass('hidden');\n          });\n        }\n\n        this.trigger('afterInitializeRedactor', {\n          inputField: this,\n        });\n\n        if (this.enforceButtonOrder) {\n          const desiredOrder = this.enforceButtonOrder;\n\n          let $toolbar = $(this.redactor.toolbar.getElement().nodes);\n          if (desiredOrder.length > 0) {\n            let index = 0;\n\n            // Reverse the desired order, so we can prepend them.\n            // The other option was to leave the order and append them, but this better addresses an edge case\n            // Where not all buttons and plugin buttons are defined in the enforced button order.\n            for (let buttonName of desiredOrder.reverse()) {\n              let $existing = $toolbar.find(`[data-re-name=${buttonName}]`);\n              if ($existing.length > 0) {\n                $toolbar.prepend($existing);\n              }\n            }\n          }\n        }\n\n        delete Craft.RedactorInput.currentInstance;\n      },\n\n      onInitRedactor: function (redactor) {\n        this.redactor = redactor;\n\n        // Add the .focusable-input class for Craft.CP\n        this.redactor.container.getElement().addClass('focusable-input');\n\n        this.leaveFullscreenOnSaveShortcut();\n\n        if (\n          this.redactor.opts.toolbarFixed &&\n          !Craft.RedactorInput.scrollPageOnReady\n        ) {\n          Garnish.$doc.ready(function () {\n            Garnish.$doc.trigger('scroll');\n          });\n\n          Craft.RedactorInput.scrollPageOnReady = true;\n        }\n      },\n\n      onEditorFocus: function () {\n        this.redactor.container.getElement().trigger('focus');\n      },\n\n      onEditorBlur: function () {\n        this.redactor.container.getElement().trigger('blur');\n      },\n\n      leaveFullscreenOnSaveShortcut: function () {\n        if (\n          typeof this.redactor.plugin.fullscreen !== 'undefined' &&\n          typeof this.redactor.plugin.fullscreen.close === 'function'\n        ) {\n          Craft.cp.on(\n            'beforeSaveShortcut',\n            $.proxy(function () {\n              if (this.redactor.plugin.fullscreen.isOpen) {\n                this.redactor.plugin.fullscreen.close();\n              }\n            }, this)\n          );\n        }\n      },\n\n      replaceRedactorButton: function (key, title) {\n        var previousButton = this.redactor.toolbar.getButton(key);\n\n        // Ignore if the button isn't in use\n        if (!previousButton) {\n          return;\n        }\n\n        var icon = previousButton.$icon.get(0);\n\n        var placeholderKey = key + '_placeholder';\n        var placeholder = this.redactor.toolbar.addButtonAfter(\n          key,\n          placeholderKey,\n          {title: title}\n        );\n        previousButton.remove();\n\n        // Create the new button\n        var button = this.redactor.toolbar.addButtonAfter(placeholderKey, key, {\n          title: title,\n        });\n        placeholder.remove();\n\n        button.setIcon(icon);\n\n        return button;\n      },\n\n      showContextBar: function (e, contextbar) {\n        if (this.justResized) {\n          this.justResized = false;\n          return;\n        }\n\n        var current = this.redactor.selection.getCurrent();\n        var data = this.redactor.inspector.parse(current);\n\n        var repositionContextBar = function (e, contextbar) {\n          var parent = contextbar.$contextbar.parent();\n\n          var top =\n            e.clientY +\n            contextbar.$contextbar.height() -\n            10 -\n            parent.offset().top +\n            (contextbar.livePreview\n              ? parent.scrollTop()\n              : contextbar.$win.scrollTop());\n          var left =\n            e.clientX -\n            contextbar.$contextbar.width() / 2 -\n            parent.offset().left;\n\n          var position = {\n            left: left + 'px',\n            top: top + 'px',\n          };\n\n          contextbar.$contextbar.css(position);\n        };\n\n        if (!data.isFigcaption() && data.isComponentType('image')) {\n          var node = data.getComponent();\n          var $img = $(node).find('img');\n          if ($img.length === 1) {\n            var matches = (matches = $img.attr('src').match(/#asset:(\\d+)/i));\n            if (matches) {\n              var assetId = matches[1];\n              Craft.postActionRequest(\n                'redactor',\n                {assetId: assetId},\n                function (data) {\n                  if (data.success) {\n                    var buttons = {\n                      'image-editor': {\n                        title: this.redactor.lang.get('image-editor'),\n                        api: 'plugin.craftAssetImageEditor.open',\n                        args: assetId,\n                      },\n                      edit: {\n                        title: this.redactor.lang.get('edit'),\n                        api: 'module.image.open',\n                      },\n                      remove: {\n                        title: this.redactor.lang.get('delete'),\n                        api: 'module.image.remove',\n                        args: node,\n                      },\n                    };\n\n                    contextbar.set(e, node, buttons);\n                  }\n\n                  repositionContextBar(e, contextbar);\n                }.bind(this)\n              );\n            }\n          }\n        }\n\n        repositionContextBar(e, contextbar);\n      },\n    },\n    {\n      handleRedactorInit: function () {\n        // `this` is the current Redactor instance.\n        // `Craft.RedactorInput.currentInstance` is the current RedactorInput instance\n        Craft.RedactorInput.currentInstance.onInitRedactor(this);\n      },\n    }\n  );\n})(jQuery);\n"]}