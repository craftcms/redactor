{"version":3,"sources":["RedactorInput.js"],"names":["window","livePreviewHideFullscreen","$","Craft","RedactorInput","Garnish","Base","extend","id","linkOptions","volumes","elementSiteId","allSites","redactorConfig","showAllUploaders","$textarea","redactor","linkOptionModals","enforceButtonOrder","init","settings","this","transforms","defaultTransform","lang","redactorLang","direction","orientation","imageUpload","fileUpload","plugins","push","buttons","index","inArray","splice","lowestListButtonIndex","oldListButtons","i","length","buttonsAddFirst","concat","buttonsAdd","buttonsAddBefore","before","buttonsAddAfter","after","callbacks","started","handleRedactorInit","focus","onEditorFocus","bind","blur","onEditorBlur","contextbar","showContextBar","initRedactor","Slideout","on","addClass","removeClass","selector","toolbarFixed","target","closest","toolbarFixedTarget","currentInstance","$R","toolbarButtons","toolbar","getButtonsKeys","indexOf","plugin","craftAssetImages","overrideButton","addButton","setTransforms","setDefaultTransform","setVolumes","setElementSiteId","allowAllUploaders","craftAssetFiles","craftElementLinks","setAllSites","setLinkOptions","livePreview","ev","trigger","inputField","desiredOrder","$toolbar","getElement","nodes","buttonName","reverse","$existing","find","prepend","onInitRedactor","container","leaveFullscreenOnSaveShortcut","opts","scrollPageOnReady","$doc","ready","fullscreen","close","cp","proxy","isOpen","replaceRedactorButton","key","title","previousButton","getButton","icon","$icon","get","placeholderKey","placeholder","addButtonAfter","remove","button","setIcon","e","justResized","current","selection","getCurrent","data","inspector","parse","repositionContextBar","parent","$contextbar","top","clientY","height","offset","scrollTop","$win","position","left","clientX","width","css","isFigcaption","isComponentType","node","getComponent","$img","matches","attr","match","assetId","postActionRequest","success","image-editor","api","args","edit","set","jQuery"],"mappings":"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","file":"RedactorInput.min.js","sourcesContent":["window.livePreviewHideFullscreen = false;\n\n(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    /**\n     * Redactor input class\n     */\n    Craft.RedactorInput = Garnish.Base.extend(\n        {\n            id: null,\n            linkOptions: null,\n            volumes: null,\n            elementSiteId: null,\n            allSites: {},\n            redactorConfig: null,\n            showAllUploaders: false,\n\n            $textarea: null,\n            redactor: null,\n            linkOptionModals: null,\n\n            enforceButtonOrder: null,\n\n            init: function(settings) {\n                this.id = settings.id;\n                this.linkOptions = settings.linkOptions;\n                this.volumes = settings.volumes;\n                this.transforms = settings.transforms;\n                this.elementSiteId = settings.elementSiteId;\n                this.allSites = settings.allSites;\n                this.redactorConfig = settings.redactorConfig;\n                this.showAllUploaders = settings.showAllUploaders;\n                this.defaultTransform = settings.defaultTransform;\n\n                this.linkOptionModals = [];\n\n                if (this.redactorConfig.enforceButtonOrder) {\n                    this.enforceButtonOrder = this.redactorConfig.enforceButtonOrder;\n                    delete this.redactorConfig.enforceButtonOrder;\n                }\n\n                if (!this.redactorConfig.lang) {\n                    this.redactorConfig.lang = settings.redactorLang;\n                }\n\n                if (!this.redactorConfig.direction) {\n                    this.redactorConfig.direction = (settings.direction || Craft.orientation);\n                }\n\n                this.redactorConfig.imageUpload = false;\n                this.redactorConfig.fileUpload = false;\n\n                // Prevent a JS error when calling core.destroy() when opts.plugins == false\n                if (typeof this.redactorConfig.plugins !== typeof []) {\n                    this.redactorConfig.plugins = [];\n                }\n\n                this.redactorConfig.plugins.push('craftAssetImages');\n                this.redactorConfig.plugins.push('craftAssetFiles');\n                this.redactorConfig.plugins.push('craftElementLinks');\n                this.redactorConfig.plugins.push('craftAssetImageEditor');\n\n                // Redactor I/II config setting normalization\n                if (this.redactorConfig.buttons) {\n                    var index;\n\n                    // buttons.formatting => buttons.format\n                    if ((index = $.inArray('formatting', this.redactorConfig.buttons)) !== -1) {\n                        this.redactorConfig.buttons.splice(index, 1, 'format');\n                    }\n\n                    // buttons.unorderedlist/orderedlist/undent/indent => buttons.lists\n                    var oldListButtons = ['unorderedlist', 'orderedlist', 'undent', 'indent'],\n                        lowestListButtonIndex;\n\n                    for (var i = 0; i < oldListButtons.length; i++) {\n                        if ((index = $.inArray(oldListButtons[i], this.redactorConfig.buttons)) !== -1) {\n                            this.redactorConfig.buttons.splice(index, 1);\n\n                            if (typeof lowestListButtonIndex === 'undefined' || index < lowestListButtonIndex) {\n                                lowestListButtonIndex = index;\n                            }\n                        }\n                    }\n\n                    if (typeof lowestListButtonIndex !== 'undefined') {\n                        this.redactorConfig.buttons.splice(lowestListButtonIndex, 0, 'lists');\n                    }\n                } else {\n                    this.redactorConfig.buttons = ['html', 'format', 'bold', 'italic', 'deleted', 'lists', 'image', 'file', 'link'];\n                }\n\n                // Now mix in the buttons provided by other options, before we start our own shenanigans\n                // `buttonsAddFirst`\n                if (this.redactorConfig.buttonsAddFirst) {\n                    this.redactorConfig.buttons = this.redactorConfig.buttonsAddFirst.buttons.concat(this.redactorConfig.buttons);\n                }\n\n                // `buttonsAdd`\n                if (this.redactorConfig.buttonsAdd) {\n                    this.redactorConfig.buttons = this.redactorConfig.buttons.concat(this.redactorConfig.buttonsAdd.buttons);\n                }\n\n                // `buttonsAddBefore`\n                if (this.redactorConfig.buttonsAddBefore) {\n                    var index;\n                    for (i = 0; i < this.redactorConfig.buttons.length; i++) {\n                        if (this.redactorConfig.buttons[i] == this.redactorConfig.buttonsAddBefore.before) {\n                            this.redactorConfig.buttons.splice(i, 0, ...this.redactorConfig.buttonsAddBefore.buttons);\n                            break;\n                        }\n                    }\n                }\n\n                // `buttonsAddAfter`\n                if (this.redactorConfig.buttonsAddAfter) {\n                    var index;\n                    for (i = 0; i < this.redactorConfig.buttons.length; i++) {\n                        if (this.redactorConfig.buttons[i] == this.redactorConfig.buttonsAddAfter.after) {\n                            this.redactorConfig.buttons.splice(i + 1, 0, ...this.redactorConfig.buttonsAddAfter.buttons);\n                            break;\n                        }\n                    }\n                }\n\n                delete this.redactorConfig.buttonsAddFirst;\n                delete this.redactorConfig.buttonsAddBefore;\n                delete this.redactorConfig.buttonsAddAfter;\n                delete this.redactorConfig.buttonsAdd;\n\n                // Define our callbacks\n                this.redactorConfig.callbacks = {\n                    started: Craft.RedactorInput.handleRedactorInit,\n                    focus: this.onEditorFocus.bind(this),\n                    blur: this.onEditorBlur.bind(this),\n                    contextbar: this.showContextBar.bind(this)\n                };\n\n                if (this.redactorConfig.buttons.length === 0) {\n                    delete this.redactorConfig.buttons;\n                }\n\n                // Initialize Redactor\n                this.initRedactor();\n\n                if (typeof Craft.Slideout !== 'undefined') {\n                    Garnish.on(Craft.Slideout, 'open', () => $('body').addClass('redactor-element-editor-open'));\n                    Garnish.on(Craft.Slideout, 'close', () => $('body').removeClass('redactor-element-editor-open'));\n                }\n            },\n\n            initRedactor: function() {\n                var selector = '#' + this.id;\n                this.$textarea = $(selector);\n\n                if (typeof this.redactorConfig.toolbarFixed === 'undefined' || this.redactorConfig.toolbarFixed) {\n                    // Set the toolbarFixedTarget depending on the context\n                    var target = this.$textarea.closest('#content');\n                    if (target.length) {\n                        this.redactorConfig.toolbarFixedTarget = target;\n                    }\n                }\n\n                Craft.RedactorInput.currentInstance = this;\n                this.$textarea.redactor(this.redactorConfig);\n\n                this.redactor = $R(selector);\n\n                if (typeof this.redactorConfig.buttons === 'undefined') {\n                    this.redactorConfig.buttons = [];\n                }\n\n                var toolbarButtons = this.redactor.toolbar.getButtonsKeys();\n\n                if (this.redactorConfig.buttons.indexOf('image') !== -1) {\n                    if (toolbarButtons.indexOf('image') !== -1) {\n                        this.redactor.plugin.craftAssetImages.overrideButton('image');\n                    } else {\n                        this.redactor.plugin.craftAssetImages.addButton('image', this.redactorConfig.buttons.indexOf('image'));\n                    }\n\n                    this.redactor.plugin.craftAssetImages.setTransforms(this.transforms);\n                    this.redactor.plugin.craftAssetImages.setDefaultTransform(this.defaultTransform);\n                    this.redactor.plugin.craftAssetImages.setVolumes(this.volumes);\n                    this.redactor.plugin.craftAssetImages.setElementSiteId(this.elementSiteId);\n                    this.redactor.plugin.craftAssetImages.allowAllUploaders = this.showAllUploaders;\n                }\n\n                if (this.redactorConfig.buttons.indexOf('file') !== -1) {\n                    if (toolbarButtons.indexOf('file') !== -1) {\n                        this.redactor.plugin.craftAssetFiles.overrideButton('file');\n                    } else {\n                        this.redactor.plugin.craftAssetFiles.addButton('file', this.redactorConfig.buttons.indexOf('file'));\n                    }\n                    this.redactor.plugin.craftAssetFiles.setVolumes(this.volumes);\n                    this.redactor.plugin.craftAssetFiles.setElementSiteId(this.elementSiteId);\n                }\n\n                if (toolbarButtons.indexOf('link') !== -1) {\n                    this.redactor.plugin.craftElementLinks.setElementSiteId(this.elementSiteId);\n                    this.redactor.plugin.craftElementLinks.setAllSites(this.allSites);\n                    if (this.linkOptions.length) {\n                        this.redactor.plugin.craftElementLinks.setLinkOptions(this.linkOptions);\n                    }\n                }\n\n                if (this.redactorConfig.plugins.indexOf('fullscreen') !== -1 && typeof Craft.livePreview != \"undefined\" && window.livePreviewHideFullscreen === false) {\n                    window.livePreviewHideFullscreen = true;\n                    Craft.livePreview.on('beforeEnter', function (ev) {\n                        $('a.re-button.re-fullscreen').addClass('hidden');\n                    });\n                    Craft.livePreview.on('beforeExit', function (ev) {\n                        $('a.re-button.re-fullscreen').removeClass('hidden');\n                    });\n                }\n\n                this.trigger('afterInitializeRedactor', {\n                    inputField: this,\n                });\n\n                if (this.enforceButtonOrder) {\n                    const desiredOrder = this.enforceButtonOrder;\n\n                    let $toolbar = $(this.redactor.toolbar.getElement().nodes);\n                    if (desiredOrder.length > 0) {\n                        let index = 0;\n\n                        // Reverse the desired order, so we can prepend them.\n                        // The other option was to leave the order and append them, but this better addresses an edge case\n                        // Where not all buttons and plugin buttons are defined in the enforced button order.\n                        for (let buttonName of desiredOrder.reverse()) {\n                            let $existing = $toolbar.find(`[data-re-name=${buttonName}]`);\n                            if ($existing.length > 0) {\n                                $toolbar.prepend($existing);\n                            }\n                        }\n                    }\n                }\n\n                delete Craft.RedactorInput.currentInstance;\n            },\n\n            onInitRedactor: function(redactor) {\n\n                this.redactor = redactor;\n\n                // Add the .focusable-input class for Craft.CP\n                this.redactor.container.getElement().addClass('focusable-input');\n\n                this.leaveFullscreenOnSaveShortcut();\n\n                if (this.redactor.opts.toolbarFixed && !Craft.RedactorInput.scrollPageOnReady) {\n                    Garnish.$doc.ready(function() {\n                        Garnish.$doc.trigger('scroll');\n                    });\n\n                    Craft.RedactorInput.scrollPageOnReady = true;\n                }\n            },\n\n            onEditorFocus: function() {\n                this.redactor.container.getElement().trigger('focus');\n            },\n\n            onEditorBlur: function() {\n                this.redactor.container.getElement().trigger('blur');\n            },\n\n            leaveFullscreenOnSaveShortcut: function() {\n                if (typeof this.redactor.plugin.fullscreen !== 'undefined' && typeof this.redactor.plugin.fullscreen.close === 'function') {\n                    Craft.cp.on('beforeSaveShortcut', $.proxy(function() {\n                        if (this.redactor.plugin.fullscreen.isOpen) {\n                            this.redactor.plugin.fullscreen.close();\n                        }\n                    }, this));\n                }\n            },\n\n            replaceRedactorButton: function(key, title) {\n                var previousButton = this.redactor.toolbar.getButton(key);\n\n                // Ignore if the button isn't in use\n                if (!previousButton) {\n                    return;\n                }\n\n                var icon = previousButton.$icon.get(0);\n\n                var placeholderKey = key+'_placeholder';\n                var placeholder = this.redactor.toolbar.addButtonAfter(key, placeholderKey, {title: title});\n                previousButton.remove();\n\n                // Create the new button\n                var button = this.redactor.toolbar.addButtonAfter(placeholderKey, key, {title: title});\n                placeholder.remove();\n\n                button.setIcon(icon);\n\n                return button;\n            },\n\n            showContextBar: function(e, contextbar) {\n                if (this.justResized)\n                {\n                    this.justResized = false;\n                    return;\n                }\n\n                var current = this.redactor.selection.getCurrent();\n                var data = this.redactor.inspector.parse(current);\n\n                var repositionContextBar = function (e, contextbar) {\n                    var parent = contextbar.$contextbar.parent();\n\n                    var top = e.clientY + contextbar.$contextbar.height() - 10 - parent.offset().top + (contextbar.livePreview ? parent.scrollTop() : contextbar.$win.scrollTop());\n                    var left = e.clientX - contextbar.$contextbar.width() / 2 - parent.offset().left;\n\n                    var position = {\n                        left: left + 'px',\n                        top: top + 'px'\n                    };\n\n                    contextbar.$contextbar.css(position);\n                };\n\n                if (!data.isFigcaption() && data.isComponentType('image'))\n                {\n                    var node = data.getComponent();\n                    var $img  = $(node).find('img');\n                    if ($img.length === 1) {\n                        var matches = matches = $img.attr('src').match(/#asset:(\\d+)/i);\n                        if (matches) {\n                            var assetId = matches[1];\n                            Craft.postActionRequest('redactor', {assetId: assetId}, function (data) {\n                                if (data.success) {\n                                    var buttons = {\n                                        \"image-editor\": {\n                                            title: this.redactor.lang.get('image-editor'),\n                                            api: 'plugin.craftAssetImageEditor.open',\n                                            args: assetId\n                                        },\n                                        \"edit\": {\n                                            title: this.redactor.lang.get('edit'),\n                                            api: 'module.image.open'\n                                        },\n                                        \"remove\": {\n                                            title: this.redactor.lang.get('delete'),\n                                            api: 'module.image.remove',\n                                            args: node\n                                        }\n                                    };\n\n                                    contextbar.set(e, node, buttons);\n                                }\n\n                                repositionContextBar(e, contextbar);\n                            }.bind(this));\n                        }\n                    }\n\n                }\n\n                repositionContextBar(e, contextbar);\n            }\n        },\n        {\n            handleRedactorInit: function() {\n                // `this` is the current Redactor instance.\n                // `Craft.RedactorInput.currentInstance` is the current RedactorInput instance\n                Craft.RedactorInput.currentInstance.onInitRedactor(this);\n            }\n        });\n})(jQuery);\n"]}