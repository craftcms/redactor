{"version":3,"file":"CraftAssetImageEditor.js","mappings":"YAAA,IAAIA,EAASC,EAAEC,OAAO,GAAIC,MAAMC,SAASC,WAAY,CACnDC,QAAS,KAETC,MAAO,aAEPC,KAAM,SAAUF,GACdG,KAAKH,QAAUA,EAEf,IAAII,EAAW,CACbC,kBAAkB,EAClBC,OAAQH,KAAKI,YAAYC,KAAKL,MAC9BM,qBAAsBZ,MAAMa,WAG9B,IAAIb,MAAMc,iBAAiBX,EAASI,IAGtCG,YAAa,WACX,IACIK,EADUT,KAAKU,IAAIC,OAAOC,aACRC,KAAK,gBAEvBC,EAAoB,SAAUC,GAChC,IAAIC,EAAUD,EAAKE,IAAIC,MAAM,uCAG7B,GAAIF,GAAWA,EAAQ,IAAMhB,KAAKH,QAEhC,GAAKmB,EAAQ,GAGN,CACL,IAAIG,EAAO,CACTtB,QAASmB,EAAQ,GACjBI,OAAQJ,EAAQ,IAGlBtB,MAAM2B,kBAAkB,OAAQ,4BAA6B,CAC3DF,KAAAA,IACCG,MAAK,SAACC,GACPR,EAAKE,IACHM,EAASJ,KAAKK,IACd,KACA,IAAIC,MAAOC,UACX,UACAV,EAAQ,GACR,cACAA,EAAQ,WAlBZD,EAAKE,IACHD,EAAQ,GAAK,KAAM,IAAIS,MAAOC,UAAY,UAAYV,EAAQ,IAqBpEX,KAAKL,MAEP,IAAK,IAAIe,KAAQN,EAAQkB,MAEvBb,EADAC,EAAON,EAAQkB,MAAMZ,IAIvBf,KAAKU,IAAIkB,QAAQC,mBAMlBlC,SADEmC,IAAI,SAAU,wBAAyBvC,G","sources":["webpack:///./js/CraftAssetImageEditor.js"],"sourcesContent":["var plugin = $.extend({}, Craft.Redactor.PluginBase, {\n  assetId: null,\n\n  start: function () {},\n\n  open: function (assetId) {\n    this.assetId = assetId;\n\n    var settings = {\n      allowSavingAsNew: false,\n      onSave: this.reloadImage.bind(this),\n      allowDegreeFractions: Craft.isImagick,\n    };\n\n    new Craft.AssetImageEditor(assetId, settings);\n  },\n\n  reloadImage: function () {\n    var $editor = this.app.editor.getElement();\n    var $images = $editor.find('[data-image]');\n\n    var refreshNodeSource = function (node) {\n      var matches = node.src.match(/(.*)#asset:(\\d+)(:transform:(.*))?/i);\n\n      // Find all instances of THIS asset.\n      if (matches && matches[2] == this.assetId) {\n        // Not a transform\n        if (!matches[4]) {\n          node.src =\n            matches[1] + '?' + new Date().getTime() + '#asset:' + matches[2];\n        } else {\n          var data = {\n            assetId: matches[2],\n            handle: matches[4],\n          };\n\n          Craft.sendActionRequest('POST', 'assets/generate-transform', {\n            data,\n          }).then((response) => {\n            node.src =\n              response.data.url +\n              '?' +\n              new Date().getTime() +\n              '#asset:' +\n              matches[2] +\n              ':transform:' +\n              matches[4];\n          });\n        }\n      }\n    }.bind(this);\n\n    for (var node in $images.nodes) {\n      node = $images.nodes[node];\n      refreshNodeSource(node);\n    }\n\n    this.app.storage.observeImages();\n  },\n});\n\n(function ($R) {\n  $R.add('plugin', 'craftAssetImageEditor', plugin);\n})(Redactor);\n"],"names":["plugin","$","extend","Craft","Redactor","PluginBase","assetId","start","open","this","settings","allowSavingAsNew","onSave","reloadImage","bind","allowDegreeFractions","isImagick","AssetImageEditor","$images","app","editor","getElement","find","refreshNodeSource","node","matches","src","match","data","handle","sendActionRequest","then","response","url","Date","getTime","nodes","storage","observeImages","add"],"sourceRoot":""}