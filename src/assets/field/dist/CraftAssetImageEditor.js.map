{"version":3,"file":"CraftAssetImageEditor.js","mappings":";;;;;AAAA,IAAIA,MAAM,GAAGC,CAAC,CAACC,MAAF,CAAS,EAAT,EAAaC,KAAK,CAACC,QAAN,CAAeC,UAA5B,EAAwC;EACnDC,OAAO,EAAE,IAD0C;EAGnDC,KAAK,EAAE,iBAAY,CAAE,CAH8B;EAKnDC,IAAI,EAAE,cAAUF,OAAV,EAAmB;IACvB,KAAKA,OAAL,GAAeA,OAAf;IAEA,IAAIG,QAAQ,GAAG;MACbC,gBAAgB,EAAE,KADL;MAEbC,MAAM,EAAE,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAFK;MAGbC,oBAAoB,EAAEX,KAAK,CAACY;IAHf,CAAf;IAMA,IAAIZ,KAAK,CAACa,gBAAV,CAA2BV,OAA3B,EAAoCG,QAApC;EACD,CAfkD;EAiBnDG,WAAW,EAAE,uBAAY;IACvB,IAAIK,OAAO,GAAG,KAAKC,GAAL,CAASC,MAAT,CAAgBC,UAAhB,EAAd;IACA,IAAIC,OAAO,GAAGJ,OAAO,CAACK,IAAR,CAAa,cAAb,CAAd;;IAEA,IAAIC,iBAAiB,GAAG,UAAUC,IAAV,EAAgB;MACtC,IAAIC,OAAO,GAAGD,IAAI,CAACE,GAAL,CAASC,KAAT,CAAe,qCAAf,CAAd,CADsC,CAGtC;;MACA,IAAIF,OAAO,IAAIA,OAAO,CAAC,CAAD,CAAP,IAAc,KAAKnB,OAAlC,EAA2C;QACzC;QACA,IAAI,CAACmB,OAAO,CAAC,CAAD,CAAZ,EAAiB;UACfD,IAAI,CAACE,GAAL,GACED,OAAO,CAAC,CAAD,CAAP,GAAa,GAAb,GAAmB,IAAIG,IAAJ,GAAWC,OAAX,EAAnB,GAA0C,SAA1C,GAAsDJ,OAAO,CAAC,CAAD,CAD/D;QAED,CAHD,MAGO;UACL,IAAIK,MAAM,GAAG;YACXxB,OAAO,EAAEmB,OAAO,CAAC,CAAD,CADL;YAEXM,MAAM,EAAEN,OAAO,CAAC,CAAD;UAFJ,CAAb;UAIAtB,KAAK,CAAC6B,iBAAN,CACE,2BADF,EAEEF,MAFF,EAGE,UAAUG,IAAV,EAAgB;YACdT,IAAI,CAACE,GAAL,GACEO,IAAI,CAACC,GAAL,GACA,GADA,GAEA,IAAIN,IAAJ,GAAWC,OAAX,EAFA,GAGA,SAHA,GAIAJ,OAAO,CAAC,CAAD,CAJP,GAKA,aALA,GAMAA,OAAO,CAAC,CAAD,CAPT;UAQD,CAZH;QAcD;MACF;IACF,CA9BuB,CA8BtBZ,IA9BsB,CA8BjB,IA9BiB,CAAxB;;IAgCA,KAAK,IAAIW,IAAT,IAAiBH,OAAO,CAACc,KAAzB,EAAgC;MAC9BX,IAAI,GAAGH,OAAO,CAACc,KAAR,CAAcX,IAAd,CAAP;MACAD,iBAAiB,CAACC,IAAD,CAAjB;IACD;;IAED,KAAKN,GAAL,CAASkB,OAAT,CAAiBC,aAAjB;EACD;AA3DkD,CAAxC,CAAb;;AA8DA,CAAC,UAAUC,EAAV,EAAc;EACbA,EAAE,CAACC,GAAH,CAAO,QAAP,EAAiB,uBAAjB,EAA0CvC,MAA1C;AACD,CAFD,EAEGI,QAFH,E","sources":["webpack:///./js/CraftAssetImageEditor.js"],"sourcesContent":["var plugin = $.extend({}, Craft.Redactor.PluginBase, {\n  assetId: null,\n\n  start: function () {},\n\n  open: function (assetId) {\n    this.assetId = assetId;\n\n    var settings = {\n      allowSavingAsNew: false,\n      onSave: this.reloadImage.bind(this),\n      allowDegreeFractions: Craft.isImagick,\n    };\n\n    new Craft.AssetImageEditor(assetId, settings);\n  },\n\n  reloadImage: function () {\n    var $editor = this.app.editor.getElement();\n    var $images = $editor.find('[data-image]');\n\n    var refreshNodeSource = function (node) {\n      var matches = node.src.match(/(.*)#asset:(\\d+)(:transform:(.*))?/i);\n\n      // Find all instances of THIS asset.\n      if (matches && matches[2] == this.assetId) {\n        // Not a transform\n        if (!matches[4]) {\n          node.src =\n            matches[1] + '?' + new Date().getTime() + '#asset:' + matches[2];\n        } else {\n          var params = {\n            assetId: matches[2],\n            handle: matches[4],\n          };\n          Craft.postActionRequest(\n            'assets/generate-transform',\n            params,\n            function (data) {\n              node.src =\n                data.url +\n                '?' +\n                new Date().getTime() +\n                '#asset:' +\n                matches[2] +\n                ':transform:' +\n                matches[4];\n            }\n          );\n        }\n      }\n    }.bind(this);\n\n    for (var node in $images.nodes) {\n      node = $images.nodes[node];\n      refreshNodeSource(node);\n    }\n\n    this.app.storage.observeImages();\n  },\n});\n\n(function ($R) {\n  $R.add('plugin', 'craftAssetImageEditor', plugin);\n})(Redactor);\n"],"names":["plugin","$","extend","Craft","Redactor","PluginBase","assetId","start","open","settings","allowSavingAsNew","onSave","reloadImage","bind","allowDegreeFractions","isImagick","AssetImageEditor","$editor","app","editor","getElement","$images","find","refreshNodeSource","node","matches","src","match","Date","getTime","params","handle","postActionRequest","data","url","nodes","storage","observeImages","$R","add"],"sourceRoot":""}