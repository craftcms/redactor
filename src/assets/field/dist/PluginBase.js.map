{"version":3,"file":"PluginBase.js","mappings":"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","sources":["webpack:///./js/PluginBase.js"],"sourcesContent":["Craft.Redactor = {};\n\nCraft.Redactor.PluginBase = {\n  app: null,\n  title: null,\n  apiTarget: null,\n  icon: null,\n  elementSiteId: null,\n\n  init: function (app) {\n    this.app = app;\n  },\n\n  start: function () {\n    this.title = this.app.lang.get(this.title);\n  },\n\n  overrideButton: function (replaceButton) {\n    var previousButton = this.app.toolbar.getButton(replaceButton);\n\n    if (!previousButton) {\n      this.addButton(replaceButton);\n      return;\n    }\n\n    var icon = previousButton.$icon.get(0);\n\n    var placeholderKey = replaceButton + '_placeholder';\n    var placeholder = this.app.toolbar.addButtonAfter(\n      replaceButton,\n      placeholderKey,\n      {title: this.title}\n    );\n    previousButton.remove();\n\n    var buttonData = {\n      title: this.title,\n      api: this.apiTarget,\n    };\n\n    // Create the new button\n    var button = this.app.toolbar.addButtonAfter(\n      placeholderKey,\n      replaceButton,\n      buttonData\n    );\n    placeholder.remove();\n\n    button.setIcon(icon);\n  },\n\n  addButton: function (buttonName, index) {\n    var allButtons = this.app.toolbar.getButtonsKeys();\n\n    var buttonData = {\n      title: this.title,\n      api: this.apiTarget,\n    };\n\n    // Figure out where to put it\n    var position, $el;\n\n    if (typeof index !== 'undefined') {\n      var allButtons = this.app.toolbar.getButtons();\n\n      if (allButtons.length > index) {\n        position = 'before';\n        $el = allButtons[index];\n      }\n    }\n\n    var button = this.app.toolbar.addButton(\n      buttonName,\n      buttonData,\n      position,\n      $el\n    );\n    button.setIcon($('<i class=\"re-icon-' + buttonName + '\"></i>').get(0));\n  },\n\n  setElementSiteId: function (siteId) {\n    this.elementSiteId = siteId;\n  },\n\n  registerCmdS: (saveCb, closeCb) => {\n    // Add a new layer\n    Garnish.shortcutManager.addLayer();\n\n    // Trigger the save callback on Cmd+S\n    Garnish.shortcutManager.registerShortcut(\n      {keyCode: Garnish.S_KEY, ctrl: true},\n      () => {\n        saveCb();\n      }\n    );\n\n    // Trigger the close callback on Esc\n    Garnish.shortcutManager.registerShortcut(Garnish.ESC_KEY, () => {\n      closeCb();\n    });\n  },\n\n  saveSelection: (app) => {\n    if (app.selection.isCollapsed()) {\n      app.selection.save();\n      app.selectionMarkers = false;\n    } else {\n      app.selection.saveMarkers();\n      app.selectionMarkers = true;\n    }\n  },\n\n  restoreSelection: (app) => {\n    if (app.selectionMarkers) {\n      app.selection.restoreMarkers();\n    } else {\n      app.selection.restore();\n    }\n\n    app.selectionMarkers = false;\n  },\n};\n"],"names":["Craft","Redactor","PluginBase","app","title","apiTarget","icon","elementSiteId","init","start","lang","get","overrideButton","replaceButton","previousButton","toolbar","getButton","addButton","$icon","placeholderKey","placeholder","addButtonAfter","remove","buttonData","api","button","setIcon","buttonName","index","allButtons","getButtonsKeys","position","$el","getButtons","length","$","setElementSiteId","siteId","registerCmdS","saveCb","closeCb","Garnish","shortcutManager","addLayer","registerShortcut","keyCode","S_KEY","ctrl","ESC_KEY","saveSelection","selection","isCollapsed","save","selectionMarkers","saveMarkers","restoreSelection","restoreMarkers","restore"],"sourceRoot":""}